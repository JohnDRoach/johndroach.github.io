<html>
<head>

</head>
<script src = "http://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/js/bootstrap.min.js" ></script>
<link rel='stylesheet' href="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/bootstrap.min.css" type="text/css" />
<body onload="onLoad()">
<div class="container">
<div id="title" class="jumbotron"><h1>PocketSmith Percentage of Gross Calculator</h1></div>
<div id="controls">
  <form id="frm1">
	<div class="form-group">
		<label for="grossIncome">Gross Income:</label> <input type="number" id="grossIncome" value="50000" class="form-control"/>
	</div>
	<div class="form-group">
		<input type="button" class="btn btn-primary" onclick="calculate()" value="Calculate" />
	</div>
</div>
</form>

<div id="output" />

<script type="text/javascript">
var developerKey = "";
var grossIncome = 0;
var myId = "";

function onLoad() {
  var parameters = window.location.search.substring(1).split("|");
  developerKey = parameters[0];
  document.getElementById("grossIncome").value = parameters[1];
  grossIncome = document.getElementById("grossIncome").value;
  getUserId();
}

function getUserId() {
  document.getElementById('output').innerHTML = "Getting Id...";
  var xhttp = new XMLHttpRequest();

  xhttp.onreadystatechange = function() {
    if (xhttp.readyState == 4 && xhttp.status == 200) {
      var response = JSON.parse(xhttp.responseText);
      myId = response.id;
      getAccounts();
    } else if(xhttp.readyState == 4) {
      document.getElementById('output').innerHTML = "There was an error getting the userId.";
    }
  }

  xhttp.open("GET", "https://api.pocketsmith.com/v2/me", true);
  xhttp.setRequestHeader("Authorization", "Key " + developerKey);
  xhttp.send();
}

function getAccounts() {
  document.getElementById('output').innerHTML = "Getting accounts...";
  ///v2/users/ id  /transaction_accounts
  var command = "https://api.pocketsmith.com/v2/users/" + myId.toString() + "/transaction_accounts"
  var xhttp = new XMLHttpRequest();

  xhttp.onreadystatechange = function() {
    if (xhttp.readyState == 4 && xhttp.status == 200) {
      document.getElementById('output').innerHTML = xhttp.responseText;
      var response = JSON.parse(xhttp.responseText);
    } else if(xhttp.readyState == 4) {
      document.getElementById('output').innerHTML = "There was an error getting accounts.";
    }
  }

  xhttp.open("GET", command, true);
  xhttp.setRequestHeader("Authorization", "Key " + developerKey);
  xhttp.send();
}

function signIn() {
  window.location = "https://my.pocketsmith.com/oauth/authorize#response_type=token&scope=\"user.read accounts.read transactions.read categories.read\"&redirect_uri=http://johndroach.github.io/pocketsmith/test.htm";
}

function calcStampDuty(price) {
  if(price < 14001) {
    return 0.0125 * price;
  }
  if(price < 30001) {
   return 175 + (0.015 * (price - 14000));
  }
  if(price < 80001) {
    return 415 + (0.0175 * (price - 30000));
  }
  if(price < 300001) {
    return 1290 + (0.035 * (price - 80000));
  }
  if(price < 1000001) {
    return 8990 + (0.045 * (price - 300000));
  }
  if(price < 3000001) {
    return 40490 + (0.055 * (price - 1000000));
  }
  return 150490 + (0.07 * (price - 3000000));
}

function calcLmi(lvr, loanAmount) {
  if(lvr < 80.01) {
    return 0;
  }
  if(lvr < 82.01) {
    if(loanAmount < 300001) {
      return 0.005 * loanAmount;
    }
    if(loanAmount < 600001) {
      return 0.0056 * loanAmount;
    }
    if(loanAmount < 1000000) {
      return 0.0077 * loanAmount;
    }
  }
  if(lvr < 84.01) {
    if(loanAmount < 300001) {
      return 0.0065 * loanAmount;
    }
    if(loanAmount < 600001) {
      return 0.0084 * loanAmount;
    }
    if(loanAmount < 1000000) {
      return 0.0108 * loanAmount;
    }
  }
  if(lvr < 86.01) {
    if(loanAmount < 300001) {
      return 0.0086 * loanAmount;
    }
    if(loanAmount < 600001) {
      return 0.0106 * loanAmount;
    }
    if(loanAmount < 1000000) {
      return 0.0134 * loanAmount;
    }
  }
  if(lvr < 88.01) {
    if(loanAmount < 300001) {
      return 0.0103 * loanAmount;
    }
    if(loanAmount < 600001) {
      return 0.0145 * loanAmount;
    }
    if(loanAmount < 1000000) {
      return 0.0161 * loanAmount;
    }
  }
  if(lvr < 90.01) {
    if(loanAmount < 300001) {
      return 0.0131 * loanAmount;
    }
    if(loanAmount < 600001) {
      return 0.0175 * loanAmount;
    }
    if(loanAmount < 1000000) {
      return 0.0216 * loanAmount;
    }
  }
  if(lvr < 92.01) {
    if(loanAmount < 300001) {
      return 0.0203 * loanAmount;
    }
    if(loanAmount < 600001) {
      return 0.0265 * loanAmount;
    }
    if(loanAmount < 1000000) {
      return 0.0354 * loanAmount;
    }
  }
  if(lvr < 94.01) {
    if(loanAmount < 300001) {
      return 0.0228 * loanAmount;
    }
    if(loanAmount < 600001) {
      return 0.0299 * loanAmount;
    }
    if(loanAmount < 1000000) {
      return 0.0420 * loanAmount;
    }
  }
  if(lvr < 95.01) {
    if(loanAmount < 300001) {
      return 0.0264 * loanAmount;
    }
    if(loanAmount < 600001) {
      return 0.0330 * loanAmount;
    }
    if(loanAmount < 1000000) {
      return 0.0443 * loanAmount;
    }
  }
}

function calculateOld() {
  var housePrice = parseFloat(document.getElementById('housePrice').value);
  var deposit = parseFloat(document.getElementById('deposit').value);

  var pestBuilding = parseFloat(document.getElementById('pestBuilding').value);
  var conveyancing = parseFloat(document.getElementById('conveyancing').value);
  var valuation = parseFloat(document.getElementById('valuation').value);
  var stampDuty = calcStampDuty(housePrice);
  var upFrontCosts = pestBuilding + conveyancing + valuation + stampDuty;
  document.getElementById('stampDuty').value = stampDuty;
  
  var realDeposit = deposit - upFrontCosts;
  var percentageRequired = 100 - (realDeposit / housePrice * 100);
  document.getElementById('realDeposit').value = realDeposit;
  document.getElementById('percentageRequired').value = percentageRequired;

  if(housePrice > 1000000) {
    document.getElementById('lmi').value = "Looking at $1,000,000 properties?";
    document.getElementById('totalLoan').value = "Go talk to a professional man!";
  }
  else if(percentageRequired > 95) {
    document.getElementById('lmi').value = "Cannot lend more than 95% of the purchase price!";
    document.getElementById('totalLoan').value = "No loan for you!";
  }
  else {
    var loanAmount = housePrice - realDeposit;
    var lmi = calcLmi(percentageRequired, loanAmount);
    totalLoan = loanAmount + lmi;

    document.getElementById('lmi').value = lmi;
    document.getElementById('totalLoan').value = totalLoan;
  }
}
</script>
</body>
</html>
